name: PMS Backend API Pipeline

on:
  push:
    branches:
      - ci/pipeline
    paths:
      - 'backend-ms1/**'
      - '.github/workflows/*-backend.yml' 
  workflow_dispatch: {}

jobs:
  test: 
    name: Compile and Unit Test
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: backend-ms1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Run Unit Tests (includes compile)
        run: ./mvnw clean verify 

  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [test] 
    defaults:
      run:
        working-directory: backend-ms1
    steps:
      - name: Checkout code 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17 (if Dockerfile does not build from source)
        if: ${{ false }} 
                        
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Extract project version
        id: extract_version
        run: |
          VERSION=$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          if [ -z "$VERSION" ] || [ "$VERSION" == "null" ]; then
            echo "Error: Could not extract version from pom.xml"
            exit 1
          fi
          echo "Extracted version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: backend-ms1 
          file: backend-ms1/Dockerfile 
          push: true
          platforms: linux/amd64
          tags: | 
            ${{ secrets.DOCKERHUB_USERNAME }}/pms-api:${{ steps.extract_version.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/pms-api:latest
          build-args: |
            PROFILE=dev # Example build arg, ensure your Dockerfile uses it
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  